@model DoAnWeb.Models.GIOHANG

@{
    ViewBag.Title = "ConfirmBuy";
    Layout = "~/Views/Shared/_CustomerLayout.cshtml";

    SelectList list1 = ViewBag.TP;
    SelectList list2 = ViewBag.QH;
    SelectList list3 = ViewBag.MAPX;

    var list = Session["giohang"] as List<DoAnWeb.Models.CTGIOHANG>;
}

<div style="width:60%; margin:auto; border:2px dashed #808080; border-radius:10px; padding: 10px;"><style>
    textarea {
        max-width: 100%;
        min-width: 100%;
        min-height: 150px;
        max-height: 350px;
        border-radius: 10px;
    }

    div .bordered {
        border-radius: 8px;
    }

    div .right-border {
        border-bottom-right-radius: 5px;
        border-top-right-radius: 5px;
    }

    .center {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100%;
    }

    .v-center {
        display: flex;
        align-items: center;
        height: 100%;
    }

    .mua {
        width: 100%;
        display: inline-block;
        padding: 0.46em 1.6em;
        border: 0.1em solid #000000;
        margin: 0 0.2em 0.2em 0;
        border-radius: 0.12em;
        box-sizing: border-box;
        text-decoration: none;
        font-family: 'Roboto',sans-serif;
        font-weight: 300;
        color: #000000;
        text-shadow: 0 0.04em 0.04em rgba(0,0,0,0.35);
        background-color: #ff6a00;
        text-align: center;
        transition: all 0.15s;
        border-radius: 5px;
    }

        .mua:hover {
            text-shadow: 0 0 2em rgba(255,255,255,1);
            color: #FFFFFF;
            border-color: #FFFFFF;
        }
    /* Chrome, Safari, Edge, Opera */
    input::-webkit-outer-spin-button,
    input::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }

    /* Firefox */
    input[type=number] {
        -moz-appearance: textfield;
    }
</style>
    @using (Html.BeginForm("ConfirmBuy", "User", FormMethod.Post, new { id = "demoForm", name = "demoForm" }))
    {
        @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>HÓA ĐƠN</h4>
    @{
        {
            long total = 0;
            int i = 0;
            <div class="row">
                <div class="col-sm-12">
                    <div class="table-responsive">
                        <table class="table table-bordered">
                            <tr>
                                <th>Hình</th>
                                <th>Tên sản phẩm</th>
                                <th>Đơn giá</th>
                                <th>Thành tiền</th>
                                <th>Số lượng</th>
                            </tr>
                            @foreach (var item in list)
                            {
                                <tr>
                                    @{ var db = new DoAnWeb.Models.MTPKEntities1();
                                        var mh = db.MATHANGs.Find(item.MAMH);
                                    }
                                    <td class="text-center"><img src="~/Images/Products/@mh.ANH" width="70" height="60" /> </td>
                                    <td><a target="_blank" href="@Url.Action("Details", "User", new { id = item.MAMH })" style="font-size:medium;"> @mh.TENMH </a> </td>
                                    <td> @mh.DONGIA.ToString("#,##0") </td>
                                    <td> @item.THANHTIEN.ToString("#,##0") </td>
                                    <td align="center"> <h5>@item.SOLUONG</h5></td>
                                </tr>
                                i++;
                                total += item.THANHTIEN;
                            }
                        </table>

                        <div>
                            Tổng thành tiền:
                            <span style="font-size:large;">@total.ToString("#,##0") VNĐ </span>
                        </div>
                    </div>

                </div>
                
                @Html.HiddenFor(m => m.TONGTIEN, new { Value = total });
            </div>
        }
    }
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group row">
        <div class="col-md-6">
            @Html.LabelFor(model => model.MATP, "Phường / Xã", htmlAttributes: new { @class = "control-label" })<br />
            @Html.DropDownListFor(m => m.MATP, null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.MATP, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-6">
            @Html.LabelFor(model => model.MAPTTT, "Phương thức thanh toán", htmlAttributes: new { @class = "control-label" })
            @Html.DropDownList("MAPTTT", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.MAPTTT, "", new { @class = "text-danger" })
        </div>
    </div>
    <hr />
    <div class="form-group row">
        <div class="col-md-6">
            @Html.EditorFor(model => model.HOTENKH, new { htmlAttributes = new { @class = "form-control", @placeholder = "Vui lòng nhập tên..." } })
            @Html.ValidationMessageFor(model => model.HOTENKH, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-6">
            @Html.TextBoxFor(model => model.SDTKH, htmlAttributes: new { @class = "form-control", @type = "number", @placeholder = "Vui lòng nhập số điện thoại..." })
            @Html.ValidationMessageFor(model => model.SDTKH, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-5">
            <div class="checkbox">
                @Html.RadioButtonFor(model => model.GIOITINHKH, "True", new { @checked = "checked" }) &nbsp; Anh &nbsp;
                @Html.RadioButtonFor(model => model.GIOITINHKH, "False") &nbsp; Chị
                @Html.ValidationMessageFor(model => model.GIOITINHKH, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group center">
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.LOINHAN, htmlAttributes: new { @class = "form-control", @placeholder = "Để lại lời nhắn (Không bắt buộc)..." })
            @Html.ValidationMessageFor(model => model.LOINHAN, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group center">
        <div class="col-md-10">
            @Html.EditorFor(model => model.DIACHI, new { htmlAttributes = new { @class = "form-control", @placeholder = "Địa chỉ..." } })
            @Html.ValidationMessageFor(model => model.DIACHI, "", new { @class = "text-danger" })
        </div>
    </div>

    @Html.HiddenFor(m => m.NGAYXUAT, new { Value = DateTime.Now.Date })
    @Html.HiddenFor(m => m.TRANGTHAI, new { Value = false })

    <div class="form-group center">
        <div class="col-md-5">
            <input type="submit" value="XÁC NHẬN" class="btn mua" />
        </div>
    </div>
</div>
    }
</div>